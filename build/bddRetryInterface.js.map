{"version":3,"sources":["../source/bddRetryInterface.js"],"names":[],"mappings":"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","file":"bddRetryInterface.js","sourcesContent":["\"use strict\";\n\nimport {utils, Suite} from \"mocha\";\nimport RetryTest from \"./retryTest\";\n\n\nmodule.exports = function createInterface() {\n\n    return (suite) => {\n        const suites = [suite];\n        suite.on(\"pre-require\", (context, file, mocha) => {\n            context.before = (...args) => suites[0].beforeAllWithRetry(...args);\n            context.after = (...args) => suites[0].afterAllWithRetry(...args);\n            context.beforeEach = (...args) => suites[0].beforeEachWithRetry(...args);\n            context.afterEach = (...args) => suites[0].afterEachWithRetry(...args);\n            context.describe = context.context = (times, title, fn) => {\n                if (!fn) {\n                    [times, title, fn] = [void 0, times, title];\n                }\n                times = times || suites[0].times || context.DEFAULT_RETRY;\n                const asuite = Suite.create(suites[0], title);\n                asuite.times = times;\n                asuite.file = file;\n                suites.unshift(asuite);\n                fn.call(asuite);\n                suites.shift();\n                return asuite;\n            };\n            context.xdescribe = context.xcontext = context.describe.skip = (times, title, fn) => {\n                if (!fn) {\n                    [times, title, fn] = [void 0, times, title];\n                }\n                const asuite = Suite.create(suites[0], title);\n                asuite.pending = true;\n                suites.unshift(asuite);\n                fn.call(asuite);\n                return suites.shift();\n            };\n            context.describe.only = (times, title, fn) => {\n                const asuite = context.describe(times, title, fn);\n                mocha.grep(asuite.fullTitle());\n                return asuite;\n            };\n            context.it = context.itretry = (times, title, fn) => {\n                const asuite = suites[0];\n                if (!fn && typeof times !== \"number\") {\n                    [times, title, fn] = [asuite.times || 1, times, title];\n                }\n                if (asuite.pending) {\n                    fn = null;\n                }\n                const test = new RetryTest(times, title, fn);\n                test.file = file;\n                asuite.addTest(test);\n                return test;\n            };\n            context.it.only = (times, title, fn) => {\n                const test = context.it(times, title, fn);\n                const reString = \"^\" + utils.escapeRegexp(test.fullTitle()) + \"$\";\n                mocha.grep(new RegExp(reString));\n                return test;\n            };\n            context.xit = context.xspecify = context.it.skip = (times, title, fn) => {\n                if (!title) {\n                    return context.it(times);\n                }\n                if (!fn) {\n                    [times, title, fn] = [1, times, title];\n                }\n                return context.it(times, title);\n            };\n        });\n    };\n};\n"]}